#!/bin/bash
##
# num2words - number to words
# ---
# see https://unix.stackexchange.com/questions/413441/converting-numbers-into-full-writen-words/413475#413475
# works up until billions. some parts have been removed.
##

digits=(
    "" one two three four five six seven eight nine
    ten eleven twelve thirteen fourteen fifteen sixteen seventeen eightteen nineteen
)
tens=("" "" twenty thirty forty fifty sixty seventy eighty ninety)
units=("" thousand million billion trillion)

number2words() {
    local -i number=$((10#$1))
    local -i u=0
    local words=()
    local group

    while ((number > 0)); do
        group=$(hundreds2words $((number % 1000)) )
        [[ -n "$group" ]] && group="$group ${units[u]}"

        words=("$group" "${words[@]}")

        ((u++))
        ((number = number / 1000))
    done
    echo "${words[*]}"
}

hundreds2words() {
    local -i num=$((10#$1))
    if ((num < 20)); then
        echo "${digits[num]}"
    elif ((num < 100)); then
        echo "${tens[num / 10]} ${digits[num % 10]}"
    else
        echo "${digits[num / 100]} hundred and $("$FUNCNAME" $((num % 100)) )"
    fi
}


n2w() {
    for arg; do
        [[ $arg == *[^0-9]* ]] && result="NaN" || result=$(number2words "$arg")
        printf "%s\n" "$result"
    done
}

RESULT=$(n2w ${1}|xargs)

# if the last word is "and", remove it
LAST_WORD=$(echo "${RESULT}"|awk 'NF{ print $NF }')

[ "${LAST_WORD}" == "and" ] && {
    RESULT=$(echo "${RESULT}" | sed s/'\w*$'//)
}
echo ${RESULT}

# EOF